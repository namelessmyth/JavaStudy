server:
  port: 8080

# 缓存公共配置，供其他地方引用
cache:
  redis:
    ip: docker-study
    port: 6379
    password: redis123
    database: 0

spring:
  application:
    name: springboot_cache
  cache:
    type: redis
  redis:
    host: ${cache.redis.ip}
    password: ${cache.redis.password}
    port: ${cache.redis.port}
    database: ${cache.redis.database}
j2cache:
  open-spring-cache: true
  cache-clean-mode: passive
  allow-null-values: true
  #指定redis客户端使用lettuce，也可以使用Jedis
  redis-client: lettuce
  #开启二级缓存，false则表示只使用一级缓存
  l2-cache-open: true
  
  #事件通知的机制，j2cache从1.3.0版本开始支持JGroups和Redis Pub/Sub两种方式进行缓存事件的通知。
  #此处我们使用基于redis的发布订阅模式来通知缓存的各个节点来进行缓存数据的同步（由j2cache进行实现，我们写上配置
  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy
  #broadcast: jgroups
  #指定一级缓存提供者为caffeine
  L1:
    provider_class: caffeine
  #指定二级缓存提供者为redis
  L2:
    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider
    config_section: lettuce
    sync_ttl_to_redis: true
    default_cache_null_object: false
    serialization: fst

caffeine:
  properties: /caffeine.properties # 这个配置文件需要放在项目中
  
#lettuce是redis的一个客户端，也可以使用jedis，都是用来操作redis的java客户端
lettuce:
  mode: single
  namespace:
  storage: generic
  channel: j2cache
  scheme: redis
  hosts: ${cache.redis.ip}:${cache.redis.port}
  password: ${cache.redis.password}
  database: ${cache.redis.database}
  sentinelMasterId:
  maxTotal: 100
  maxIdle: 10
  minIdle: 10
  timeout: 10000
